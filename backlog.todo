## Backlog:
    ☐ @Feat(Trie): Optimize feature to convert Trie to LCTrie @idea
    ☐ @Refactor(Supernet): extract binary operations to separate package @low
    ☐ @Refactor(Supernet): extract IPNet wrapping logic to file or a package @low
    ☐ @Feat(Supernet): build storage layer, so the trie can be saved and loaded @big
        ☐ @Feat(Storage): define file binary format which includes
             ☐ tree 
             ☐ metadata
             ☐ data
        ☐ @Feat(Storage): memory mapped Writer
        ☐ @Feat(Storage): memory mapped Reader
        ☐ @Feat(Storage): hot-swap storage at runtime
        ☐ @Refactor(Supernet): make supernet compatible with storage layer
    ☐ @Feat(CLI): add serve command that serve the tree lookups as http endpoint
    ✔ @Refactor(Trie): to be an interface or more generic @low @done(24-07-02 22:30)
    ✔ @Feat(CLI): configurable output format @done(24-07-02 22:27)
    ✔ @Feat(CLI): logs flag @done(24-06-30 23:55)
    ✔ @Feat(Supernet): Build cmd `supernet` that take a file and resolve the conflict @high @done(24-06-25 20:32)
    ✔ @Feat(Supernet): add a report function to report what is conflicted and how it was resolved @high @done(24-06-25 20:32)
    ✔ @Feat(Supernet): add recursive conflict resolution during splitting @high @high @done(24-06-25 20:32)
        ✔ replace AddChildIfNotExist with super.Insert and refactor the code if needed @done(24-06-25 20:32)
        ✔ find a way if to detect if the conflicted was created during the insertion, to avoid conflict resolution @done(24-06-25 20:32)
    ✔ @Refactor(Supernet): clean the code @done(24-06-30 23:32)
    ✔ @Refactor(Supernet): make the resolvers and actions easy to track @done(24-06-30 23:32)
    ✔ @feat(Supernet): make the supernet configurable @done(24-06-30 23:32)
        ✔ @feat(Supernet): add custom comparator @done(24-06-30 23:32)
        ✔ feat(Supernet): add custom logger @done(24-06-30 23:32)
    

